@using Client.ThietLap
@inject IOptions<MayChuApi> MayChuApi
@{
	string id = ViewData["modal-xem-id"]?.ToString() ?? throw new NullReferenceException();
}
<!-- Begin Index.Partial.Xem-->
<div class="modal fade" id="@id" tabindex="-1" role="dialog" aria-labelledby="@(id)--label" aria-hidden="true">
	<div class="modal-dialog" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="@(id)-label">Modal title</h5>
				<button type="button" class="close" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>
			<form id="@(id)--form">
				<div class="modal-body">
					<div class="form-group">
						<label for="@(id)--ten">Tên kiểu người dùng</label>
						<input type="text" name="ten" class="form-control" id="@(id)--ten" disabled>
					</div>

					<table id="@(id)--bang" class="table table-bordered">
						<thead>
						<tr>
							<th>Tên trường</th>
							<th>Kiểu dữ liệu</th>
						</tr>
						</thead>
						<tbody>
						</tbody>
					</table>

				</div>
			</form>
			<div class="modal-footer">
				<button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
				<button type="button" id="@(id)--submit" class="btn btn-primary">Save changes</button>
			</div>
		</div>
	</div>
</div>

<script>
	window.addEventListener('load', function () {
		let dom = document.getElementById('@id');
		dom.data = {
			ten: document.getElementById('@(id)--ten'),
			bang: document.getElementById('@(id)--bang')
		};

		let cacheDanhSachTruongTheoId = [];
		dom.layDanhSachTruongTheoId = async function (id) {
			if (cacheDanhSachTruongTheoId[id] == null
				||
				(
					globalThis.flags != null
					&&
					globalThis.flags.includes(id)
				)
			) {
				cacheDanhSachTruongTheoId[id] = await fetch(`@(MayChuApi.Value.DiaChi)/Api/DanhSachTruongThongTinNguoiDungThuocKieuNguoiDung/TheoKieuNguoiDung?id=${id}`).then(response => response.json());
				if (globalThis.flags != null)
					globalThis.flags.pop(id);
			}
			return cacheDanhSachTruongTheoId[id];
		}

		dom.xoa = function () {
			/**@@type {HTMLTableElement}*/
			let cacHangCanXoa = dom.data.bang.querySelectorAll('tbody tr');
			for (let item of cacHangCanXoa)
				item.remove();
		};

		dom.ve = function (id) {
			let cacTruongCuaKieuTaiKhoan = cacheDanhSachTruongTheoId[id];
			console.log(cacTruongCuaKieuTaiKhoan);
			for (let item of cacTruongCuaKieuTaiKhoan) {
				let tr = dom.data.bang.tBodies[0].insertRow(-1);
				let td = document.createElement('td');
				td.textContent = item.ten;

				tr.appendChild(td);

				td = document.createElement('td');
				td.textContent = item.kieuDuLieu;

				tr.appendChild(td);
			}
		}

		dom.nap = async function (id) {
			dom.xoa();
			await dom.layDanhSachTruongTheoId(id).then(_ => dom.ve(id));
			let data = $('#@ViewData["bang-id"]').DataTable().data().filter(x => x.id === id)[0];
			dom.data.ten.value = data.ten;
		};

		this['obj-@id'] = dom;
	});
</script>
<!-- End Index.Partial.Xem-->